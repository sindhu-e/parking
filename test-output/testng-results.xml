<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="12" ignored="0" total="28" passed="16">
  <reporter-output>
  </reporter-output>
  <suite name="calculatorTests" duration-ms="189699" started-at="2018-06-06T05:17:00Z" finished-at="2018-06-06T05:20:09Z">
    <groups>
    </groups>
    <test name="allTests" duration-ms="189699" started-at="2018-06-06T05:17:00Z" finished-at="2018-06-06T05:20:09Z">
      <class name="calculatorTests.ShortTerm">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="beforeSuite" is-config="true" duration-ms="0" started-at="2018-06-05T22:17:00Z" finished-at="2018-06-05T22:17:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="beforeClass" is-config="true" duration-ms="329" started-at="2018-06-05T22:17:00Z" finished-at="2018-06-05T22:17:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="9326" started-at="2018-06-05T22:17:00Z" finished-at="2018-06-05T22:17:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1470" started-at="2018-06-05T22:17:09Z" data-provider="getTestData" finished-at="2018-06-05T22:17:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@614df0a4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="1016" started-at="2018-06-05T22:17:11Z" finished-at="2018-06-05T22:17:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3629" started-at="2018-06-05T22:17:12Z" finished-at="2018-06-05T22:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1497" started-at="2018-06-05T22:17:15Z" data-provider="getTestData" finished-at="2018-06-05T22:17:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@77128dab]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="1014" started-at="2018-06-05T22:17:17Z" finished-at="2018-06-05T22:17:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3530" started-at="2018-06-05T22:17:18Z" finished-at="2018-06-05T22:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1404" started-at="2018-06-05T22:17:21Z" data-provider="getTestData" finished-at="2018-06-05T22:17:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@4f66ffc8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="1020" started-at="2018-06-05T22:17:23Z" finished-at="2018-06-05T22:17:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3704" started-at="2018-06-05T22:17:24Z" finished-at="2018-06-05T22:17:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1452" started-at="2018-06-05T22:17:28Z" data-provider="getTestData" finished-at="2018-06-05T22:17:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@5e5beb8a]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="1013" started-at="2018-06-05T22:17:29Z" finished-at="2018-06-05T22:17:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3633" started-at="2018-06-05T22:17:30Z" finished-at="2018-06-05T22:17:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1488" started-at="2018-06-05T22:17:34Z" data-provider="getTestData" finished-at="2018-06-05T22:17:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@60591e1b]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="972" started-at="2018-06-05T22:17:35Z" finished-at="2018-06-05T22:17:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="5415" started-at="2018-06-05T22:17:36Z" finished-at="2018-06-05T22:17:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1467" started-at="2018-06-05T22:17:41Z" data-provider="getTestData" finished-at="2018-06-05T22:17:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@4403bff8]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="966" started-at="2018-06-05T22:17:43Z" finished-at="2018-06-05T22:17:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3577" started-at="2018-06-05T22:17:44Z" finished-at="2018-06-05T22:17:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1472" started-at="2018-06-05T22:17:47Z" data-provider="getTestData" finished-at="2018-06-05T22:17:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@2b41b8bb]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Error! Wrong Time format is used] but found [$ 112.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Error! Wrong Time format is used] but found [$ 112.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="952" started-at="2018-06-05T22:17:49Z" finished-at="2018-06-05T22:17:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3634" started-at="2018-06-05T22:17:50Z" finished-at="2018-06-05T22:17:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1450" started-at="2018-06-05T22:17:54Z" data-provider="getTestData" finished-at="2018-06-05T22:17:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@20a9fb01]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ERROR! YOUR EXIT DATE OR TIME IS BEFORE YOUR ENTRY DATE OR TIME] but found [$ 0.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ERROR! YOUR EXIT DATE OR TIME IS BEFORE YOUR ENTRY DATE OR TIME] but found [$ 0.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="928" started-at="2018-06-05T22:17:55Z" finished-at="2018-06-05T22:17:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3823" started-at="2018-06-05T22:17:56Z" finished-at="2018-06-05T22:18:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1409" started-at="2018-06-05T22:18:00Z" data-provider="getTestData" finished-at="2018-06-05T22:18:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@48da5106]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="987" started-at="2018-06-05T22:18:01Z" finished-at="2018-06-05T22:18:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3754" started-at="2018-06-05T22:18:02Z" finished-at="2018-06-05T22:18:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1215" started-at="2018-06-05T22:18:06Z" data-provider="getTestData" finished-at="2018-06-05T22:18:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@5c648e38]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="1077" started-at="2018-06-05T22:18:07Z" finished-at="2018-06-05T22:18:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3684" started-at="2018-06-05T22:18:08Z" finished-at="2018-06-05T22:18:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1176" started-at="2018-06-05T22:18:12Z" data-provider="getTestData" finished-at="2018-06-05T22:18:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@327ac23]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ERROR! Invalid Date] but found [$ 174,974.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ERROR! Invalid Date] but found [$ 174,974.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="1027" started-at="2018-06-05T22:18:13Z" finished-at="2018-06-05T22:18:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="5538" started-at="2018-06-05T22:18:14Z" finished-at="2018-06-05T22:18:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1493" started-at="2018-06-05T22:18:20Z" data-provider="getTestData" finished-at="2018-06-05T22:18:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@6da14f7f]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Error! Invalid Date] but found [$ 78.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Error! Invalid Date] but found [$ 78.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="1021" started-at="2018-06-05T22:18:21Z" finished-at="2018-06-05T22:18:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="4544" started-at="2018-06-05T22:18:22Z" finished-at="2018-06-05T22:18:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1486" started-at="2018-06-05T22:18:27Z" data-provider="getTestData" finished-at="2018-06-05T22:18:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@7ba5d307]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Error! Invalid Date] but found [$ 808.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Error! Invalid Date] but found [$ 808.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="941" started-at="2018-06-05T22:18:28Z" finished-at="2018-06-05T22:18:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="6137" started-at="2018-06-05T22:18:29Z" finished-at="2018-06-05T22:18:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1342" started-at="2018-06-05T22:18:35Z" data-provider="getTestData" finished-at="2018-06-05T22:18:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@3bd69bf6]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Error! Invalid Time] but found [$ 28.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Error! Invalid Time] but found [$ 28.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="942" started-at="2018-06-05T22:18:37Z" finished-at="2018-06-05T22:18:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3692" started-at="2018-06-05T22:18:38Z" finished-at="2018-06-05T22:18:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1454" started-at="2018-06-05T22:18:41Z" data-provider="getTestData" finished-at="2018-06-05T22:18:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@40def23]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="942" started-at="2018-06-05T22:18:43Z" finished-at="2018-06-05T22:18:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3664" started-at="2018-06-05T22:18:44Z" finished-at="2018-06-05T22:18:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1375" started-at="2018-06-05T22:18:47Z" data-provider="getTestData" finished-at="2018-06-05T22:18:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@24287e5e]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="951" started-at="2018-06-05T22:18:49Z" finished-at="2018-06-05T22:18:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="5455" started-at="2018-06-05T22:18:50Z" finished-at="2018-06-05T22:18:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1430" started-at="2018-06-05T22:18:55Z" data-provider="getTestData" finished-at="2018-06-05T22:18:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@7fece723]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="956" started-at="2018-06-05T22:18:56Z" finished-at="2018-06-05T22:18:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3745" started-at="2018-06-05T22:18:57Z" finished-at="2018-06-05T22:19:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1420" started-at="2018-06-05T22:19:01Z" data-provider="getTestData" finished-at="2018-06-05T22:19:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@7da48c4c]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="948" started-at="2018-06-05T22:19:03Z" finished-at="2018-06-05T22:19:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3739" started-at="2018-06-05T22:19:04Z" finished-at="2018-06-05T22:19:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1438" started-at="2018-06-05T22:19:07Z" data-provider="getTestData" finished-at="2018-06-05T22:19:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@581c7611]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="952" started-at="2018-06-05T22:19:09Z" finished-at="2018-06-05T22:19:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="4276" started-at="2018-06-05T22:19:10Z" finished-at="2018-06-05T22:19:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1435" started-at="2018-06-05T22:19:14Z" data-provider="getTestData" finished-at="2018-06-05T22:19:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@685d92cf]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="973" started-at="2018-06-05T22:19:15Z" finished-at="2018-06-05T22:19:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3844" started-at="2018-06-05T22:19:16Z" finished-at="2018-06-05T22:19:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1429" started-at="2018-06-05T22:19:20Z" data-provider="getTestData" finished-at="2018-06-05T22:19:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@164b28c4]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Error! Wrong Time format is used] but found [$ 132.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Error! Wrong Time format is used] but found [$ 132.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="954" started-at="2018-06-05T22:19:22Z" finished-at="2018-06-05T22:19:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="5600" started-at="2018-06-05T22:19:23Z" finished-at="2018-06-05T22:19:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1513" started-at="2018-06-05T22:19:28Z" data-provider="getTestData" finished-at="2018-06-05T22:19:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@a809e74]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ERROR! YOUR EXIT DATE OR TIME IS BEFORE YOUR ENTRY DATE OR TIME] but found [$ 0.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ERROR! YOUR EXIT DATE OR TIME IS BEFORE YOUR ENTRY DATE OR TIME] but found [$ 0.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="970" started-at="2018-06-05T22:19:30Z" finished-at="2018-06-05T22:19:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3672" started-at="2018-06-05T22:19:31Z" finished-at="2018-06-05T22:19:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1594" started-at="2018-06-05T22:19:34Z" data-provider="getTestData" finished-at="2018-06-05T22:19:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@5d5181f2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="986" started-at="2018-06-05T22:19:36Z" finished-at="2018-06-05T22:19:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3922" started-at="2018-06-05T22:19:37Z" finished-at="2018-06-05T22:19:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="PASS" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1339" started-at="2018-06-05T22:19:41Z" data-provider="getTestData" finished-at="2018-06-05T22:19:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@27a4a890]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="946" started-at="2018-06-05T22:19:42Z" finished-at="2018-06-05T22:19:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3649" started-at="2018-06-05T22:19:43Z" finished-at="2018-06-05T22:19:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1196" started-at="2018-06-05T22:19:47Z" data-provider="getTestData" finished-at="2018-06-05T22:19:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@a02b735]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [ERROR! Invalid Date] but found [$ 201,900.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [ERROR! Invalid Date] but found [$ 201,900.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="964" started-at="2018-06-05T22:19:48Z" finished-at="2018-06-05T22:19:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3775" started-at="2018-06-05T22:19:49Z" finished-at="2018-06-05T22:19:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1370" started-at="2018-06-05T22:19:53Z" data-provider="getTestData" finished-at="2018-06-05T22:19:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@58331062]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Error! Invalid Date] but found [$ 90.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Error! Invalid Date] but found [$ 90.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="933" started-at="2018-06-05T22:19:54Z" finished-at="2018-06-05T22:19:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="5524" started-at="2018-06-05T22:19:55Z" finished-at="2018-06-05T22:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1436" started-at="2018-06-05T22:20:01Z" data-provider="getTestData" finished-at="2018-06-05T22:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@2a19df5a]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Error! Invalid Date] but found [$ 942.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Error! Invalid Date] but found [$ 942.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="965" started-at="2018-06-05T22:20:02Z" finished-at="2018-06-05T22:20:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
        <test-method status="PASS" signature="initPage()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="initPage" is-config="true" duration-ms="3828" started-at="2018-06-05T22:20:03Z" finished-at="2018-06-05T22:20:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPage -->
        <test-method status="FAIL" signature="runTestCase(datareader.ParkingData)[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="runTestCase" duration-ms="1491" started-at="2018-06-05T22:20:07Z" data-provider="getTestData" finished-at="2018-06-05T22:20:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[datareader.ParkingData@7d7337d0]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Error! Invalid Time] but found [$ 42.00]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Error! Invalid Time] but found [$ 42.00]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertEqualsImpl(Assert.java:135)
	at org.testng.Assert.assertEquals(Assert.java:116)
	at org.testng.Assert.assertEquals(Assert.java:190)
	at org.testng.Assert.assertEquals(Assert.java:200)
	at calculatorTests.ShortTerm.runTestCase(ShortTerm.java:57)
	at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runTestCase -->
        <test-method status="PASS" signature="cleanUp()[pri:0, instance:calculatorTests.ShortTerm@4cc0edeb]" name="cleanUp" is-config="true" duration-ms="969" started-at="2018-06-05T22:20:08Z" finished-at="2018-06-05T22:20:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cleanUp -->
      </class> <!-- calculatorTests.ShortTerm -->
    </test> <!-- allTests -->
  </suite> <!-- calculatorTests -->
</testng-results>
